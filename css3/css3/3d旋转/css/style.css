*{
    padding: 0;
    margin: 0;
    list-style: none;
}

.wrapper{
    width: 700px;
    margin: 0 auto;
    border: 1px solid black;
}

ul{
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    width: 100%;
}

li{
    width: 200px;
    height: 200px;
    margin: 10px;
    perspective: 300px;
}

li .inner{
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transform-origin: 50% 50% -100px;
    animation: 0.3s ease-out forwards;
}

li .inner .box,
li .inner .words
{
    width: 100%;
    height: 100%;
}

ul li .box img{
    width: 100%;
    height: 100%;
}

li .inner .words{
    background-color: #000;
    position: absolute;
    top: 0;
    left: 0;
    text-align: center;
    color: #fff;
    line-height: 200px;
    /* 在3d的情况下，将此部分的内容向后移动 */
    transform: translate3d(0,0,-1px);
}

.wrapper .in-top .inner .words{
    /* 设置旋转轴的位置 */
    transform-origin: bottom;
    transform: translate3d(0,-100%,0) rotate3d(1,0,0,90deg);
}

/* 将动画效果放在这个盒子上 */
.wrapper .in-top .inner{
    animation-name: in-top;
}

.wrapper .out-top .inner{
    animation-name: out-top;
}

@keyframes in-top{
    0%{
        transform: rotate3d(0,0,0,0);
    }
    100%{
        transform: rotate3d(-1,0,0,90deg);
    }
}

@keyframes out-top{
    0%{
        transform: rotate3d(-1,0,0,90deg);
    }
    100%{
        transform: rotate3d(0,0,0,0);
    }
}

.wrapper .in-bottom .inner .words{
    /* 设置旋转轴的位置 */
    transform-origin: top;
    transform: translate3d(0,100%,0) rotate3d(-1,0,0,90deg);
}

.wrapper .in-bottom .inner{
    animation-name: in-bottom; 
}

.wrapper .out-bottom .inner{
    animation-name: out-bottom; 
}

@keyframes in-bottom{
    0%{
        transform: rotate3d(0,0,0,0);
    }
    100%{
        transform: rotate3d(1,0,0,90deg);
    }
}

@keyframes out-bottom{
    0%{
        transform: rotate3d(1,0,0,90deg);
    }
    100%{
        transform: rotate3d(0,0,0,0);
    }
}

.wrapper .in-left .inner .words{
    /* 设置旋转轴的位置 */
    transform-origin: right;
    transform: translate3d(-100%,0,0) rotate3d(0,-1,0,90deg);
}

.wrapper .in-left .inner{
    animation-name: in-left;
}

.wrapper .out-left .inner{
    animation-name: out-left;
}

@keyframes in-left{
    0%{
        transform: rotate3d(0,0,0,0);
    }
    100%{
        transform: rotate3d(0,1,0,90deg);
    }
}

@keyframes out-left{
    0%{
        transform: rotate3d(0,1,0,90deg);
    }
    100%{
        transform: rotate3d(0,0,0,0);
    }
}


.wrapper .in-right .inner .words{
    /* 设置旋转轴的位置 */
    transform-origin: left;
    transform: translate3d(100%,0,0) rotate3d(0,1,0,90deg);
}


.wrapper .in-right .inner{
    animation-name: in-right;
}

.wrapper .out-right .inner{
    animation-name: out-right;
}

@keyframes in-right{
    0%{
        transform: rotate3d(0,0,0,0);
    }
    100%{
        transform: rotate3d(0,-1,0,90deg);
    }
}

@keyframes out-right{
    0%{
        transform: rotate3d(0,-1,0,90deg);
    }
    100%{
        transform: rotate3d(0,0,0,0);;
    }
}

/* 本demo实现，目的是实现box的旋转，将图片框和后面展示内容重叠在一起
然后设置景深，设置3d效果，将文字展示部分垂直于Z轴方向向后面移动一个像
素的距离。然后采用增加四个方向不同的class来实现效果，采用in 和 out  
来实现。立体效果的实现，旋转文字展示区先移动，再旋转，使得效果看起来像
一个立体的效果。这个立体的效果通过animation来实现，先将其定为在侧面上
这个定位的过程就是增加4个class，一旦通过js增加了class，立马就会有效果
产生即达到一中最佳的方式 */
